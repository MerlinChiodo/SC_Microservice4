generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Post {
  title             String
  short_description String            @db.VarChar(255)
  long_description  String?
  controlled        Boolean           @default(false)
  created_at        DateTime          @default(now())
  event_at          DateTime?
  id                Int               @id @default(autoincrement())
  public            Boolean           @default(true)
  service           String?
  user_id           Int?
  category          Category?         @relation(fields: [categoryCategory], references: [category])
  author            User?             @relation(fields: [user_id], references: [id])
  pictures          Picture[]
  calls             Post_Call[]
  reports           Report[]
  category_subjects Category_Subject? @relation(fields: [category_SubjectId], references: [id])

  @@index([user_id], map: "Post_user_id_fkey")
  categoryCategory   String?
  category_SubjectId Int?
}

model Post_Call {
  called_at DateTime @default(now())
  id        Int      @id @default(autoincrement())
  post_id   Int
  post      Post     @relation(fields: [post_id], references: [id])

  @@index([post_id], map: "Post_Call_post_id_fkey")
}

model Picture {
  id        Int    @id @default(autoincrement())
  path      String
  mime_type String
  post_id   Int
  post      Post   @relation(fields: [post_id], references: [id])

  @@index([post_id], map: "Picture_post_id_fkey")
}

//f√ºr Suche/Biete, jobs, Musik, etc
model Category_Subject {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

model Report {
  controlled  Boolean       @default(false)
  id          Int           @id @default(autoincrement())
  post_id     Int
  reasonId    Int
  reported_at DateTime      @default(now())
  reason      Report_Reason @relation(fields: [report_ReasonReason], references: [reason])
  post        Post          @relation(fields: [post_id], references: [id])

  @@index([post_id], map: "Report_post_id_fkey")
  report_ReasonReason String
}

model Administrator {
  id    Int    @id @default(autoincrement())
  email String
}

model User {
  id           Int     @id @default(autoincrement())
  phone_number String?
  smartcity_id String?
  posts        Post[]
}

//Suche,Biete, Frage, Veranstaltung
//enums haben nicht funktioniert
model Category {
  category String @id
  Post     Post[]
}

model Report_Reason {
  reason String   @id
  Report Report[]
}

//enum Category {
//SUCHE
//BIETE
//FRAGE
//VERANSTALTUNG
//}

//enum Report_Reason {
//UNANGEBRACHTES_BILD
//UNANGEBRACHTER_INHALT
//BELEIDIGEND
//}
